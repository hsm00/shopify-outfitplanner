{% if customer %}
  <div>
    <div id="button-container"></div>
    <div id="outfit-preview" style="display: none;">
      <div class="outfit-preview-header">
        <h3>Outfit Preview</h3>
        <button id="close-preview">&#10005;</button>
      </div>
      <div class="outfit-items-container">
        <div class="outfit-main-items">
          <p>Select your slot:</p>
          <div id="hat-container" class="outfit-item" data-product-id="" data-type="hat">
            <img src="https://via.placeholder.com/100x100?text=Accessory" alt="hat Placeholder" class="outfit-image">
            <p class="outfit-title">Hat</p>
          </div>
          <div id="top-container" class="outfit-item" data-product-id="" data-type="top">
            <img src="https://via.placeholder.com/100x100?text=Top" alt="Top Placeholder" class="outfit-image">
            <p class="outfit-title">Top</p>
          </div>
          <div id="pants-container" class="outfit-item" data-product-id="" data-type="pant">
            <img src="https://via.placeholder.com/100x100?text=Pants" alt="Pants Placeholder" class="outfit-image">
            <p class="outfit-title">Pants</p>
          </div>
          <div id="shoe-container" class="outfit-item" data-product-id="" data-type="shoe">
            <img src="https://via.placeholder.com/100x100?text=Shoe" alt="Shoe Placeholder" class="outfit-image">
            <p class="outfit-title">Shoe</p>
          </div>
        </div>
        <div id="accessory-container" class="outfit-item" data-product-id="" data-type="accessory">
          <img src="https://via.placeholder.com/100x100?text=Accessory" alt="Accessory Placeholder" class="outfit-image">
          <p class="outfit-title">Accessory</p>
        </div>
      </div>
    </div>
  </div>

<style>
    .outfit-items-container {
      display: flex;
      align-items: center;
    }

    .outfit-main-items {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-right: 20px;
    }

    .outfit-item {
      cursor: pointer; /* Add this line */
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-bottom: 20px;
    }

    .outfit-image {
      width: 100px;
      height: 100px;
      object-fit: cover;
    }

    .outfit-title {
      margin-top: 5px;
      font-size: 14px;
    }

    .outfit-preview-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 10px;
    }

    #close-preview {
      font-size: 20px;
      background-color: transparent;
      border: none;
      cursor: pointer;
    }

    #outfit-preview {
      padding: 20px;
      background-color: white;
      border-radius: 5px;
      max-width: 500px;
      width: 100%;
    }

    .outfit-button {
      background-color: white;
      border: 1px solid black;
      border-radius: 4px;
      padding: 8px 16px;
      font-size: 14px;
      cursor: pointer;
    }

    #accessory-container {
      margin-left: auto; /* Push accessory to the right */
    }

  </style>

  <script>
    const productId = '{{ product.id }}';
    const productIdRaw = '{{ product.id }}';
    const customerId = '{{ customer.id }}';

    document.addEventListener('DOMContentLoaded', () => {
      fetchOutfitData();
    });

    function fetchOutfitData() {
      fetch(`https://{{ shop.domain }}/apps/outfitplaner-hesam/app/outfit?customerId=${customerId}`, {
        method: 'GET',
        headers: { 'Content-Type': 'application/json' },
      })
        .then(response => response.json())
        .then(data => {
          const buttonContainer = document.getElementById('button-container');
          const outfitPreview = document.getElementById('outfit-preview');
          const closePreviewButton = document.getElementById('close-preview');

          const isProductInOutfit =
            productId === data.topId ||
            productId === data.pantsId ||
            productId === data.shoeId ||
            productId === data.accessoryId ||
            productId === data.hatId;

          renderButtons(buttonContainer, outfitPreview, isProductInOutfit, data);
          closePreviewButton.addEventListener('click', () => outfitPreview.style.display = 'none');
        })
        .catch(error => console.error('Error:', error));
    }

    function renderButtons(buttonContainer, outfitPreview, isProductInOutfit, data) {
      buttonContainer.innerHTML = '';

      if (isProductInOutfit) {
        const removeButton = document.createElement('button');
        removeButton.classList.add('outfit-button', 'remove-from-outfit');
        removeButton.textContent = 'Remove from Outfit';
        buttonContainer.appendChild(removeButton);

        removeButton.addEventListener('click', () => {
          removeFromOutfit(productIdRaw)
            .then(() => window.location.reload())
            .catch(error => console.error('Error:', error));
        });
      } else {
        const addButton = document.createElement('button');
        addButton.classList.add('outfit-button', 'add-to-outfit');
        addButton.textContent = 'Add to Outfit';
        buttonContainer.appendChild(addButton);

        addButton.addEventListener('click', () => {
          outfitPreview.style.display = 'block';
          renderOutfitPreview(data);
        });
      }
    }

    function renderOutfitPreview(data) {
      const containers = [
        { id: 'top-container', image: data.topImage, title: 'Top', productId: data.topId },
        { id: 'pants-container', image: data.pantsImage, title: 'Pants', productId: data.pantsId },
        { id: 'shoe-container', image: data.shoeImage, title: 'Shoe', productId: data.shoeId },
        { id: 'accessory-container', image: data.accessoryImage, title: 'Accessory', productId: data.accessoryId },
        { id: 'hat-container', image: data.hatImage, title: 'Hat', productId: data.hatId },
      ];

      containers.forEach(({ id, image, title, productId }) => {
        const container = document.getElementById(id);
        const productImage = container.querySelector('img');
        const productTitle = container.querySelector('p');

        if (image) {
          productImage.src = image;
          productImage.alt = title;
        } else {
          productImage.src = `https://via.placeholder.com/100x100?text=${title}`;
          productImage.alt = `${title} Placeholder`;
        }

        productTitle.textContent = title;
        container.dataset.productId = productId;
      });
    }

    function removeFromOutfit(productId) {
      return fetch(`https://{{ shop.domain }}/apps/outfitplaner-hesam/app/pdp/remove`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ customerId, productId }),
      })
        .then(response => response.json())
        .then(data => console.log(data.message));
    }

    document.addEventListener('DOMContentLoaded', () => {
      const productContainers = document.querySelectorAll('.outfit-item');

      productContainers.forEach(container => {
        container.addEventListener('click', () => {
          const productType = container.dataset.type;
          console.log('productType', productType);
          addToOutfit(productId, productType);
        });
      });
    });

    function addToOutfit(productId, productType) {
      fetch(`https://{{ shop.domain }}/apps/outfitplaner-hesam/app/pdp/add`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ customerId, productId, productType }),
      })
        .then(response => response.json())
        .then(data => {
          console.log(data.message);
          window.location.reload();
        })
        .catch(error => console.error('Error:', error));
    }
  </script>

{% endif %}
  {% schema %}
  {
    "name": "addToButton",
    "target": "section",
    "settings": [
      { "type": "product", "id": "product", "label": "product", "autofill": true },
      { "type": "color", "id": "colour", "label": "Star Colour", "default": "#ff0000" }
    ]
  }
  {% endschema %}
